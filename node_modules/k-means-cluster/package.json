{
  "_from": "k-means-cluster",
  "_id": "k-means-cluster@0.0.0",
  "_inBundle": false,
  "_integrity": "sha1-LnXvlmwLZJ9seMQKMmftV3t4LR4=",
  "_location": "/k-means-cluster",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "k-means-cluster",
    "fetchSpec": "latest",
    "name": "k-means-cluster",
    "raw": "k-means-cluster",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/k-means-cluster/-/k-means-cluster-0.0.0.tgz",
  "_shasum": "2e75ef966c0b649f6c78c40a3267ed577b782d1e",
  "_spec": "k-means-cluster",
  "_where": "/Users/jon/Drive/DEV/anatomiesofintelligence/anatomiesofintelligence.github.io",
  "author": {
    "name": "Tom MacWright"
  },
  "bugs": {
    "url": "https://github.com/tmcw/k-means/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "k-means clustering",
  "devDependencies": {
    "mocha": "1.2.x"
  },
  "homepage": "https://github.com/tmcw/k-means#readme",
  "keywords": [
    "clustering",
    "maps",
    "math",
    "statistics"
  ],
  "license": "BSD",
  "main": "kmeans.js",
  "name": "k-means-cluster",
  "optionalDependencies": {},
  "readme": "## k-means-cluster\n\n[k-means clustering](http://en.wikipedia.org/wiki/K-means)\nin configurable dimensions, in-browser and with node.js.\n\nIn order to support [learning about the algorithm](http://macwright.org/2012/09/16/k-means.html),\nthis library is split into very small bits, so you can use each\nstep separately.\n\n```javascript\nvar kmeans = require('k-means-cluster');\n\nvar d = [1, 2, 3];\n// take a random sample of the array d\nvar s = kmeans.sample(d, 1);\n\nconsole.log(s);\n// [1]\n\n// Get the euclidean distance between two points represented as\n// arrays\nconsole.log(kmeans.dist([0, 0], [0, 1]), 1);\n// 1\n```\n\nIn order to support a variety of data, accessors are used in functions like\n`means_clusters(x, means, distance, val)` (though with good defaults -\ndistance defaults to euclidean, val defaults to `function(x) { return x; }`).\n\n```javascript\nvar c = kmeans.means_clusters([3], [3, 4])\nconsole.log(c.length);\n// 1\n```\n\n## Usage\n\n    npm install --save k-means-cluster\n\n## Testing\n\n    npm test\n\n## License is [WTFPL](http://sam.zoy.org/wtfpl/)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/tmcw/k-means.git"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "version": "0.0.0"
}
