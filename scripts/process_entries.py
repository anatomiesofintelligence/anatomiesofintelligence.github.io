#!/usr/bin/env python
"""
Make a CSV file from all markdown posts in a given directory.
"""
from __future__ import print_function
import os
import sys
import argparse
import csv
import frontmatter as fm
from pathlib import Path
import string

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description=__doc__, formatter_class=argparse.RawDescriptionHelpFormatter)
    #parser.add_argument('mode', choices=['fromfiles', 'fromcsv'], help='Choose an operation mode: fromfiles - make a new metadata.csv file from wavs, fromcsv - from a csv file generated by xml2csv')
    parser.add_argument('input', help="Input directory of md files")
    parser.add_argument('-o', '--outfile', help="Output file (by default writes metadata.csv to the same directory as input)")

    args = parser.parse_args()

    indir = args.input

    if args.outfile is None:
        outfile = "metadata.csv"
    else:
        outfile = args.outfile

    inpath = Path(indir)
    alltags = []
    allentries = []
    for file in inpath.iterdir():
        if os.path.splitext(file)[1] == ".md":
            post = fm.load(file)
            entry = {}
            for tag in post['tags']:
                if tag not in alltags:
                    alltags.append(tag)
            for key in post.keys():
                entry[key] = post[key]
            entry['content'] = post.content
            allentries.append(entry)
        else:
            print("Ignoring file: {}".format(file))

    # compile column names
    allcolumns = ['title']
    for tag in alltags:
        allcolumns.append(tag)
    for col in allentries[0].keys():
        if col not in ['tags', 'weights', 'title']:
            allcolumns.append(col)

    with open(outfile, 'w', newline='') as csvfile:
        csvwriter = csv.writer(csvfile, delimiter=',')
        csvwriter.writerow(allcolumns)
        print("WRITING HEADER: {}".format(allcolumns))
        for entry in allentries:
            row = []
            for col in allcolumns:
                if col in alltags:
                    etags = entry['tags']
                    eweights = entry['weights']
                    if col not in etags:
                        val = 0.0
                    else:
                        val = eweights[etags.index(col)]
                else:
                    if col in entry:
                        val = entry[col]
                    else:
                        val = ""
                row.append(val)
            csvwriter.writerow(row)
            print("WRITING: {}".format(row))

    print("WROTE CSV FILE to '{}'".format(outfile))
